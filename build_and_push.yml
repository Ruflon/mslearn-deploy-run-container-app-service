# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '099cc2a5-c211-480d-a820-eae57d67b655' #from build in ADO pipeline creator/ u can get it from URL in ADO service connetsions in settings
  azureSubscription: 'cargo-20volume-20220610'
  appName: 'rafalwebapp'
  containerRegistry: 'rafalregistry.azurecr.io'
  imageRepository: 'webimage'
  dockerfilePath: '$(Build.SourcesDirectory)/dotnet/Dockerfile'
  tag: 'latest'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: BuildAndPushImage
  displayName: 'Build and Push Docker Image'
  jobs:
  - job: BuildAndPush
    displayName: 'Build and Push Docker Image'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: 'Build and Push'
      inputs:
        command: buildAndPush
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        repository: $(imageRepository)
        tags: $(tag)

- stage: DeployToWebApp
  displayName: 'Deploy to Azure Web App'
  dependsOn: BuildAndPushImage
  condition: succeeded('BuildAndPushImage')
  jobs:
  - job: AppDeployment
    displayName: 'Deploy to Web App'
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: AzureWebAppContainer@1
      displayName: 'Azure Web App on Container Deploy'
      inputs:
        azureSubscription: 'ARMconnection'
        appName: $(appName)
        containers: $(containerRegistry)/$(imageRepository):$(tag)